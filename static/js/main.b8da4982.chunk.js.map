{"version":3,"sources":["components/nav/Nav.js","actions/actionType.js","components/nav/NavContainer.js","actions/navAction.js","components/utils/loading/Loading.js","components/home/Home.js","actions/postAction.js","components/home/HomeContainer.js","components/about/About.js","components/posts/PostList.js","components/posts/PostListContainer.js","components/utils/CodeBlock.js","components/posts/SinglePost.js","components/posts/SinglePostContainer.js","components/posts/CreatePost.js","components/posts/CreatePostContainer.js","App.js","serviceWorker.js","reducers/navReducer.js","reducers/allPostsReducer.js","reducers/index.js","store.js","index.js","components/utils/loading/loading.svg"],"names":["Item","props","to","children","exact","navChange","path","match","className","onClick","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","GET_LATEST_POSTS","GET_ALL_POSTS","connect","state","nav","dispatch","value","Loading","src","loading","alt","Home","getLatestPosts","this","isLoading","latestPosts","history","height","width","map","item","key","push","title","author","body","Component","withRouter","post","request","axios","get","payload","About","PostList","getAllPosts","allPosts","mapDispatchToProps","CodeBlock","language","style","duotoneDark","PureComponent","defaultProps","SinglePost","handleDelete","params","deletePost","window","confirm","onEdit","setState","isEditing","handleInputChange","e","target","name","handleUpdate","editPost","getSinglePost","prevProps","prevState","singlePost","deleteDone","editDone","onChange","source","renderers","code","delete","put","CreatePost","onSubmit","preventDefault","createPost","createDone","htmlFor","App","basename","component","HomeContainer","PostListContainer","SinglePostContainer","CreatePostContainer","Boolean","location","hostname","globalState","navReducer","action","initialState","allPostsReducer","data","Object","assign","rootReducer","combineReducers","store","applyMiddleware","promiseMiddleware","createStore","composeStoreWithMiddleWare","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b8da4982.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport './nav.css';\n\nfunction Item(props) {\n    const {to, children, exact, navChange} = props;\n\n    return ( \n      <Route\n        path={to}\n        exact={exact}\n        children={({ match }) => ( //就是一個 functional component\n          <li className={match ? \"nav-link active\" : \"nav-link\"} onClick={() => {\n            navChange(to)\n          }}>\n            <Link to={to} className=\"nav-link\" >{children}</Link>\n          </li>\n        )}\n      />\n    );\n}\n\nconst Nav = ({navChange}) => (\n  <div>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link to=\"/\" className=\"navbar-brand\">\n        <i className=\"material-icons\">\n            visibility\n          </i>\n      </Link>\n    \n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <Item to=\"/\"  navChange={navChange} exact={true}>\n          {/* <Item to={`${process.env.PUBLIC_URL}/`}  navChange={navChange} exact={true}> */}\n            Home\n          </Item >\n\n          <Item to=\"/post\" navChange={navChange}>\n          {/* <Item to={`${process.env.PUBLIC_URL}/post`} navChange={navChange}> */}\n            Post\n          </Item>\n          <Item to=\"/about\" navChange={navChange}>\n            About\n          </Item>\n          <Item to=\"/createPost\" navChange={navChange}>\n            New Post\n          </Item>\n\n        </ul>\n      </div>\n    </nav>\n  </div>\n)\n\nexport default Nav;","export const NAV_CHANGE = 'NAV_CHANGE';\n\nexport const GET_LATEST_POSTS = 'GET_LATEST_POSTS';\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\nexport const GET_SINGLE_POST = 'GET_SINGLE_POST';\nexport const CREATE_POST = 'CREATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const EDIT_POST = 'EDIT_POST';","import React from 'react';\nimport { connect } from 'react-redux';\nimport Nav from './Nav';\nimport { navChange } from '../../actions/navAction';\n\nconst NavContainer = props => <Nav {...props} />;\n\nconst mapStateToProps = state => ({\n  nav: state.nav.nav,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  navChange: nav => dispatch(navChange(nav)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavContainer);\n","import { NAV_CHANGE } from './actionType';\n\nexport const navChange = nav => ({\n  type: NAV_CHANGE,\n  value: nav,\n})","import React from 'react';\nimport loading from './loading.svg';\nimport './loading.css';\n\nconst Loading = () => (<img src={loading} alt=\"loading\" className=\"mx-auto loading\" />);\n\nexport default Loading;","import React, {Component} from 'react';\nimport Loading from '../utils/loading/Loading';\n\nclass Home extends Component {\n\n  componentDidMount() {\n    const { getLatestPosts } = this.props;\n    getLatestPosts();\n  }\n\n  render() {\n    const { isLoading, latestPosts, history } = this.props;\n    \n    if (isLoading) return <Loading />;\n    return (\n      <div>\n        \n        <div className=\"post-item col-md-10 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1562332651-12481360937c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\" height=\"550px\" width=\"100%\" alt=\"\" />\n          <h3>New Features: </h3>\n        </div>\n        \n        <div className=\"container col-md-10 mt-2\">\n          <div className=\"row post-list\">     \n          \n            {latestPosts.map((item)=> (\n              <div className=\"post-item col-md-3  mt-3 mb-4\" key={item.id} onClick={() => {\n                history.push('/post/' + item.id); //一個換頁的 function\n              }}>\n                <h4>{item.title}</h4>\n                <div className=\"post-item__author\">\n                Author: {item.author} \n                </div>\n                <div className=\"post-item__body\">\n                {item.body} \n                </div>\n              </div>\n            ))}\n            \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import { GET_LATEST_POSTS, GET_ALL_POSTS, GET_SINGLE_POST, CREATE_POST, DELETE_POST, EDIT_POST} from './actionType';\nimport axios from 'axios';\n\nexport function getLatestPosts() {\n  const request = axios.get('https://qootest.com/posts?_limit=8&_sort=id&_order=desc');\n  return {\n    type: GET_LATEST_POSTS,\n    payload: request\n  }\n}\n\nexport function getAllPosts() {\n  const request = axios.get('https://qootest.com/posts?_sort=id&_order=desc');\n  return {\n    type: GET_ALL_POSTS,\n    payload: request\n  }\n}\n\nexport const getSinglePost = id => ({\n  type: GET_SINGLE_POST,\n  payload: axios.get(`https://qootest.com/posts/${id}`)\n});\n\nexport const createPost = (author, title, body ) => ({\n  type: CREATE_POST,\n  payload: axios.post('https://qootest.com/posts', {\n    author, title, body, \n  }),\n})\n\nexport const deletePost = id => ({\n  type: DELETE_POST,\n  payload: axios.delete(`https://qootest.com/posts/${id}`)\n})\n\nexport const editPost = (id, author, title, body) => ({\n  type: EDIT_POST,\n  payload: axios.put(`https://qootest.com/posts/${id}`, {\n    author, title, body,\n  })\n});\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Home from './Home';\nimport { getLatestPosts } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst HomeContainer = props => <Home {...props} />;\n\nconst mapStateToProps = state => ({\n  latestPosts: state.post.latestPosts,\n  isLoading: state.post.isLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getLatestPosts: () => {\n    dispatch(getLatestPosts());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeContainer));\n\n","import React, {Component} from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        \n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1524793186508-ac4eab29c957?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\">\n          <h3>About something</h3>\n          With designs as colorful as the muses that influence him, Peter Jensen confronts the fashion world with a gentle dose of eccentricity and humor.\n          “I’ve never fit into the fashion scene as many other people do. I’m terrible at networking”\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About;","import React, {Component} from 'react';\nimport Loading from '../utils/loading/Loading';\nimport './posts.css';\n\nclass PostList extends Component {\n  \n  componentDidMount() {\n    const { getAllPosts } = this.props;\n    getAllPosts();\n  }\n\n  render() {\n    const {allPosts, isLoading, history} = this.props;\n\n    if (isLoading) return <Loading />;\n    return (\n      <div>\n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1531722569936-825d3dd91b15?ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        \n        <div className=\"container mt-2\">\n          <div className=\"row post-list\">     \n            {allPosts.map((item)=> (\n              <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\" key={item.id} onClick={() => {\n                history.push('/post/' + item.id); //一個換頁的 function\n              }}>\n\n                <h4>{item.title}</h4>\n                <div className=\"post-item__author\">\n                  Author: {item.author} \n                </div>\n                <div className=\"post-item__body\">\n                  {item.body} \n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n    </div> \n    )\n  }\n}\n\nexport default PostList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PostList from './PostList';\nimport { getAllPosts } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst AllPostsContainer = props => <PostList {...props} />;\n\nconst mapStateToProps = state => ({\n  allPosts: state.post.allPosts,\n  isLoading: state.post.isLoading,\n});\n\n/* 簡成一個 object */\nconst mapDispatchToProps = {\n  getAllPosts\n}\n\n/*\nconst mapDispatchToProps = dispatch => ({\n  getAllPosts: () => {\n    dispatch(getAllPosts());\n  }\n});　*/\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AllPostsContainer));\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { duotoneDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={duotoneDark}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from \"../utils/CodeBlock\";\nimport Loading from '../utils/loading/Loading';\nimport './posts.css';\n\nclass SinglePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: '',\n      title: '',\n      body: '',\n      isEditing: false,\n    }\n  }\n  \n  componentDidMount() {\n    const { getSinglePost } = this.props;\n    const { id } = this.props.match.params;\n    getSinglePost(id);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { singlePost, deleteDone, editDone, history} = this.props;\n\n    /* if (prevProps !== this.props) {\n      this.setState({\n        author: singlePost.author,\n        title: singlePost.title,\n        body: singlePost.body,\n      });\n    } */\n    \n    if (prevProps.singlePost !== singlePost) {\n      this.setState({\n        author: singlePost.author,\n        title: singlePost.title,\n        body: singlePost.body,\n      });\n    }\n\n    if (deleteDone !== prevProps.deleteDone && !deleteDone) {\n      history.push('/post')\n    }\n    \n    if (editDone !== prevProps.editDone && !editDone) {\n      // history.push('/post')\n      history.push(`/post/${singlePost.id}`);\n    }\n\n  }\n\n  handleDelete = () => {\n    const message = 'Are you sure deleting this?';\n    const { id } = this.props.match.params;\n    const { deletePost } = this.props;\n    if (window.confirm(message)) {\n      deletePost(id);\n      //history.push('/post')\n    }\n  }\n\n  onEdit = () => {\n    this.setState({\n      isEditing: !this.state.isEditing,\n    })\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleUpdate = () => {\n    const { author, title, body } = this.state;\n    const { editPost} = this.props;\n    const { id } = this.props.match.params;\n    editPost(id, author, title, body);\n    // history.push(`/post/${singlePost.id}`);\n    this.setState({\n      isEditing: !this.state.isEditing,\n    })\n  }\n\n  render() {\n    const { isEditing, title, body } = this.state;\n    const { isLoading, singlePost } = this.props;\n\n    if (isLoading) return <Loading />;\n    return (\n      <div>\n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1553458287-b25ff2a8a778?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1651&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\">\n          {\n            !isEditing \n            ? <div>\n                <h2>{!singlePost.title ? 'loading...' : singlePost.title}</h2>\n                <ReactMarkdown source={singlePost.body} renderers={{ code: CodeBlock }} className=\"single-post__content\" />\n                {/* <p className=\"single-post__content\">{singlePost.body}</p> */}\n              </div>\n            : <div>\n                <textarea className=\"single-post__title\" value={title} onChange={this.handleInputChange} name='title' />\n                <textarea className=\"single-post__content__edit\" value={body} onChange={this.handleInputChange} name='body' />\n              </div>\n          }\n\n          <div className=\"d-flex justify-content-end\">\n            {\n              !isEditing \n              ? <div>\n                  <button className=\"btn btn-secondary mr-2\" onClick={this.onEdit}>Edit</button>\n                  <button className=\"btn btn-secondary  mr-2\" onClick={this.handleDelete}>Delete</button>\n                </div>\n              : <div>\n                  <button className=\"btn btn-secondary mr-2\" onClick={this.handleUpdate}>Update</button>\n                  <button className=\"btn btn-secondary  mr-2\" onClick={this.handleDelete}>Delete</button>\n                </div>\n            }\n            <Link to=\"/post\" className=\"btn btn-secondary\">Back</Link>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default SinglePost;","import React from 'react';\nimport { connect } from 'react-redux';\nimport SinglePost from './SinglePost';\nimport { getSinglePost, deletePost, editPost } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst SinglePostContainer = props => <SinglePost {...props} />;\n\nconst mapStateToProps = state => ({\n  singlePost: state.post.singlePost,\n  deleteDone: state.post.deleteDone,\n  editDone: state.post.editDone,\n  isLoading: state.post.isLoading,\n});\n\n/* 簡成一個 object */\nconst mapDispatchToProps = {\n  getSinglePost,\n  deletePost,\n  editPost\n}\n\n/*\nconst mapDispatchToProps = dispatch => ({\n  getSinglePost: id => {\n    dispatch(getSinglePost(id));\n  },\n  deletePost: id => {\n    dispatch(deletePost(id));\n  },\n  editPost: (id, author, title, body) => {\n    dispatch(editPost(id, author, title, body));\n  }\n}); */\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SinglePostContainer));\n\n","import React, {Component} from 'react';\nimport './posts.css';\n\nclass CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: '',\n      title: '',\n      body: ''\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { createDone, history } = this.props\n    if (createDone !== prevProps.createDone && !createDone) {\n      history.push('/post')\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {createPost} = this.props;\n    const {author, title, body} = this.state;\n    createPost(author, title, body);\n    //history.push('/post');\n    this.setState({\n      author: '',\n      title: '',\n      body: ''\n    })\n  }\n\n  render() {\n    const {author, title, body} = this.state;\n    return (\n      <div className=\"col-md-8 mx-auto mt-3\">\n\n        <h1>Create a Post</h1>\n        <div>\n          <label htmlFor='author' >Author: </label>\n          <input value={author} className='form-control' name='author' onChange={this.handleInputChange} id='author' />\n        </div>\n        <div>\n          <label htmlFor='title' >Title: </label>\n          <input value={title} className='form-control' name='title' onChange={this.handleInputChange} id='title' />\n        </div>\n        <br/>\n        <label htmlFor='body' >Content: </label>\n        <textarea value={body} className='form-control single-post__content__edit' name='body' onChange={this.handleInputChange} id='content' />\n        <button className='btn btn-secondary mt-2' onClick={this.onSubmit}>submit</button>\n\n      </div>\n    )\n  }\n}\n\nexport default CreatePost;","import React from 'react';\nimport { connect } from 'react-redux';\nimport CreatePost from './CreatePost';\nimport { createPost } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst CreatePostContainer = props => <CreatePost {...props} />;\n\nconst mapStateToProps = state => ({\n  createDone: state.post.createDone,\n});\n\n\n/* 簡成一個 object */\nconst mapDispatchToProps = {\n  createPost\n}\n\n/*\nconst mapDispatchToProps = dispatch => ({\n  createPost: (author, title, body) => {\n    dispatch(createPost(author, title, body));\n  },\n}); */\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreatePostContainer));","import React from 'react';\nimport './app.css';\nimport NavContainer from './components/nav/NavContainer';\nimport HomeContainer from './components/home/HomeContainer';\nimport About from './components/about/About';\nimport PostListContainer from './components/posts/PostListContainer';\n\nimport SinglePostContainer from './components/posts/SinglePostContainer';\nimport CreatePostContainer from './components/posts/CreatePostContainer';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router basename=\"/blog_react_redux_02\">\n    {/* // <Router basename={process.env.PUBLIC_URL}> */}\n      <NavContainer />\n      \n      <Switch>\n        <Route exact path=\"/\" component={HomeContainer} />\n        <Route exact path=\"/post\" component={PostListContainer} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/post/:id\" component={SinglePostContainer} />\n        <Route path=\"/createPost\" component={CreatePostContainer} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { NAV_CHANGE } from '../actions/actionType';\n\nconst globalState = {\n  nav: '',\n}\n\nconst navReducer = (state = globalState, action) => {\n  switch (action.type) {\n    \n    case NAV_CHANGE:\n      return {\n        ...globalState,\n        nav: action.value,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default navReducer;\n","import { GET_ALL_POSTS, GET_LATEST_POSTS, GET_SINGLE_POST, CREATE_POST, DELETE_POST, EDIT_POST } from '../actions/actionType';\n\nconst initialState = {\n  allPosts: [],\n  singlePost: {},\n  latestPosts: [],\n  createDone: false,\n  editDone: false,\n  deleteDone: false,\n  isLoading: false,\n}\n\nconst allPostsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    \n    case `${GET_ALL_POSTS}_PENDING`:\n      return {\n        ...state,\n        isLoading: true,\n      }; \n    case `${GET_ALL_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        allPosts: action.payload.data,\n        isLoading: false,\n      };\n    case `${GET_ALL_POSTS}_REJECTED`:\n      return {\n        ...state,\n        isLoading: false,\n      }; \n\n    /* latest post ---------------------------*/\n    case `${GET_LATEST_POSTS}_PENDING`:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case `${GET_LATEST_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        latestPosts: action.payload.data,\n        isLoading: false,\n      };\n    case `${GET_LATEST_POSTS}_REJECTED`:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    /* single post ---------------------------*/\n    case `${GET_SINGLE_POST}_PENDING`:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case `${GET_SINGLE_POST}_FULFILLED`:\n      return {\n        ...state,\n        singlePost: action.payload.data,\n        isLoading: false,\n      };\n    case `${GET_SINGLE_POST}_REJECTED`:\n      return {\n        ...state,\n        isLoading: false,\n      }; \n    \n    case `${CREATE_POST}_PENDING`:\n      return {\n        ...state,\n        createDone: true,\n      };\n  \n    case `${CREATE_POST}_FULFILLED`:　\n      return Object.assign({}, state, {\n        singlePost: action.payload.data,\n        createDone: false,\n      })\n\n    case `${CREATE_POST}_REJECTED`:\n      return {\n        ...state,\n        createDone: false,\n      };\n\n    case `${EDIT_POST}_PENDING`:\n      return {\n        ...state,\n        editDone: true,\n        isLoading: true,\n      };\n    \n    case `${EDIT_POST}_FULFILLED`:　\n      return Object.assign({}, state, {\n        singlePost: action.payload.data,\n        editDone: false,\n        isLoading: false,\n      })\n\n    case `${EDIT_POST}_REJECTED`:\n      return {\n        ...state,\n        editDone: false,\n        isLoading: false,\n      };\n\n    case `${DELETE_POST}_PENDING`:\n      return {\n        ...state,\n        deleteDone: true,\n        isLoading: true,\n      };\n    \n    case `${DELETE_POST}_FULFILLED`:　\n      return Object.assign({}, state, {\n        singlePost: action.payload.data,\n        deleteDone: false,\n        isLoading: false,\n      })\n\n    case `${DELETE_POST}_REJECTED`:\n      return {\n        ...state,\n        deleteDone: false,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default allPostsReducer;\n","import { combineReducers } from 'redux';\nimport navReducer from './navReducer';\nimport allPostsReducer from './allPostsReducer';\n\nconst rootReducer = combineReducers({\n  nav: navReducer,\n  post: allPostsReducer,\n})\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport rootReducer from './reducers';\n\nconst composeStoreWithMiddleWare = applyMiddleware(\n  promiseMiddleware,\n)(createStore)\n\nconst store = composeStoreWithMiddleWare(rootReducer);\n// const store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.6fa42c2c.svg\";"],"sourceRoot":""}